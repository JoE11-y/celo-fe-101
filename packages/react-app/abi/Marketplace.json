{
  "address": "0x8C06491916cBbE653fcC2A4370637577d7D5Cdfc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProductsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "productId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "internalType": "struct Marketplace.CartItem[]",
          "name": "_cartItems",
          "type": "tuple[]"
        }
      ],
      "name": "placeOrder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "readProduct",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_indexToRemove",
          "type": "uint256"
        }
      ],
      "name": "removeProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_indexToUpdate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "writeProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc8baf3c51ab4960b8a729bde1b43015f19429d8fc6285a88407553098949cbb2",
  "receipt": {
    "to": null,
    "from": "0xa5cDca717A47c4203426187e6943c7C8b6acF28A",
    "contractAddress": "0x8C06491916cBbE653fcC2A4370637577d7D5Cdfc",
    "transactionIndex": 0,
    "gasUsed": "1611743",
    "logsBloom": "0x
    "blockHash": "0xd661ffc1d8d4aedf69c82cad55fa3f264fa110656f043bbb01d7aab3b250629e",
    "transactionHash": "0xc8baf3c51ab4960b8a729bde1b43015f19429d8fc6285a88407553098949cbb2",
    "logs": [],
    "blockNumber": 20084551,
    "cumulativeGasUsed": "1611743",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "24682991e1dc0445837b951d91d3b466",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProductsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.CartItem[]\",\"name\":\"_cartItems\",\"type\":\"tuple[]\"}],\"name\":\"placeOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"readProduct\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_indexToRemove\",\"type\":\"uint256\"}],\"name\":\"removeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_indexToUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"updateProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"writeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Version of Solidity compiler this program was written for\\npragma solidity >=0.7.0 <0.9.0;\\n\\n// Interface for the ERC20 token, in our case cUSD\\ninterface IERC20Token {\\n    // Transfers tokens from one address to another\\n    function transfer(address, uint256) external returns (bool);\\n\\n    // Approves a transfer of tokens from one address to another\\n    function approve(address, uint256) external returns (bool);\\n\\n    // Transfers tokens from one address to another, with the permission of the first address\\n    function transferFrom(address, address, uint256) external returns (bool);\\n\\n    // Returns the total supply of tokens\\n    function totalSupply() external view returns (uint256);\\n\\n    // Returns the balance of tokens for a given address\\n    function balanceOf(address) external view returns (uint256);\\n\\n    // Returns the amount of tokens that an address is allowed to transfer from another address\\n    function allowance(address, address) external view returns (uint256);\\n\\n    // Event for token transfers\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    // Event for approvals of token transfers\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\\n// Contract for the marketplace\\ncontract Marketplace {\\n    // Keeps track of the number of products in the marketplace\\n    uint256 internal productsLength = 0;\\n    // Address of the cEURToken\\n    address internal cEURTokenAddress = 0x10c892A6EC43a53E45D0B916B4b7D383B1b78C0F;\\n\\n    // Structure for a product\\n    struct Product {\\n        // Address of the product owner\\n        address payable owner;\\n        // Name of the product\\n        string name;\\n        // Link to an image of the product\\n        string image;\\n        // Description of the product\\n        string description;\\n        // Location of the product\\n        string location;\\n        // Price of the product in tokens\\n        uint256 price;\\n        // Number of times the product has been sold\\n        uint256 sold;\\n    }\\n\\n    // Structure for an order\\n    struct CartItem {\\n        uint256 productId;     \\n        uint256 quantity;\\n    }\\n\\n    // Mapping of products to their index\\n    mapping(uint256 => Product) internal products;\\n\\n    // Mapping showing if a product exists\\n    mapping(uint256 => bool) internal productExists;\\n\\n    // Mapping containing product owner balance in contract\\n    mapping(address => uint256) internal ownerBalance;\\n\\n    modifier isOwner(uint _index, address caller) {\\n        require(products[_index].owner == caller, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    // Writes a new product to the marketplace\\n    function writeProduct(\\n        string memory _name,\\n        string memory _image,\\n        string memory _description,\\n        string memory _location,\\n        uint256 _price\\n    ) public {\\n        // Add check to ensure that price of product is greater than 0\\n        require(_price > 0, \\\"Price must be greater than 0\\\");\\n        // Number of times the product has been sold is initially 0 because it has not been sold yet\\n        uint256 _sold = 0;\\n        // Adds a new Product struct to the products mapping\\n        products[productsLength] = Product(\\n            // Sender's address is set as the owner\\n            payable(msg.sender),\\n            _name,\\n            _image,\\n            _description,\\n            _location,\\n            _price,\\n            _sold\\n        );\\n        // Set that the product with product id exists\\n        productExists[productsLength] = true;\\n        // Increases the number of products in the marketplace by 1\\n        productsLength++;\\n    }\\n\\n    // Reads a product from the marketplace\\n    function readProduct(\\n        // Index of the product\\n        uint256 _index\\n    )\\n        public\\n        view\\n        returns (\\n            address payable,\\n            string memory,\\n            string memory,\\n            string memory,\\n            string memory,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        // Returns the details of the product\\n        return (\\n            products[_index].owner,\\n            products[_index].name,\\n            products[_index].image,\\n            products[_index].description,\\n            products[_index].location,\\n            products[_index].price,\\n            products[_index].sold\\n        );\\n    }\\n\\n    // Places order to buy products from the marketplace\\n    function placeOrder(CartItem[] memory _cartItems) public payable {\\n        uint256 _totalAmount;\\n        for (uint256 i = 0; i < _cartItems.length; i++) {\\n            // get order\\n            CartItem memory _item = _cartItems[i];\\n            // check if product exists in contract\\n            require(productExists[_item.productId] == true, \\\"Product does not exist\\\");\\n            // get product\\n            Product storage _product = products[_item.productId];\\n            // calculate total amount to sent\\n            _totalAmount += _product.price * _item.quantity;\\n            // add balance to product owner mapping\\n            ownerBalance[_product.owner] += _product.price * _item.quantity;\\n            // update number of products sold\\n            _product.sold += _item.quantity;\\n        }\\n        \\n        // transfer amount\\n        require(\\n            IERC20Token(cEURTokenAddress).transferFrom(\\n                // Sender's address is the buyer\\n                msg.sender,\\n                // Receiver's address is the contract\\n                address(this),\\n                // Amount of tokens to transfer is the total amount of order\\n                _totalAmount\\n            ),\\n            // If transfer fails, throw an error message\\n            \\\"Transfer failed.\\\"\\n        );\\n    }\\n\\n    // Product owner withdraw funds from contract\\n    function withdrawFunds() public payable {\\n        require(ownerBalance[msg.sender] > 0, \\\"Empty balance\\\");\\n\\n        uint256 amountToSend = ownerBalance[msg.sender];\\n        ownerBalance[msg.sender] = 0;\\n\\n        // transfer amount\\n        require(IERC20Token(cEURTokenAddress).transfer(payable(msg.sender), amountToSend), \\\"Transfer failed\\\");\\n    }\\n\\n    // Remove a product from the marketplace\\n    function removeProduct(\\n        uint _indexToRemove\\n    ) public isOwner(_indexToRemove, msg.sender) {\\n        delete (products[_indexToRemove]);\\n        productExists[_indexToRemove] = false;\\n    }\\n\\n\\n    // Update pricing of a product from the marketplace\\n    function updateProduct(\\n        uint _indexToUpdate,\\n        uint _newPrice\\n    ) public isOwner(_indexToUpdate, msg.sender) {\\n        products[_indexToUpdate].price = _newPrice;\\n    }\\n\\n    // Returns the number of products in the marketplace\\n    function getProductsLength() public view returns (uint256) {\\n        return (productsLength);\\n    }\\n\\n    // Return Balance of Owner\\n    function getBalance(address _owner) public view returns(uint256){\\n        return ownerBalance[_owner];\\n    }\\n}\\n\",\"keccak256\":\"0x677ade96f454aa35b0bdfe5701f31f5e0266a442a143a64e82f7fd7709ec4fa3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600080557310c892a6ec43a53e45d0b916b4b7d383b1b78c0f600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006957600080fd5b50611bd5806100796000396000f3fe60806040526004361061007b5760003560e01c80635ee95cae1161004e5780635ee95cae146100fa5780638da8f27b14610123578063f8b2cb4f1461014c578063fffa7e2e146101895761007b565b80631155dfe51461008057806324600fc3146100ab57806331f45cab146100b557806343e7fd45146100de575b600080fd5b34801561008c57600080fd5b506100956101cc565b6040516100a29190610ddf565b60405180910390f35b6100b36101d5565b005b3480156100c157600080fd5b506100dc60048036038101906100d79190610e3a565b6103c2565b005b6100f860048036038101906100f39190611028565b610489565b005b34801561010657600080fd5b50610121600480360381019061011c9190611071565b610707565b005b34801561012f57600080fd5b5061014a60048036038101906101459190611153565b61086b565b005b34801561015857600080fd5b50610173600480360381019061016e919061129c565b610a0f565b6040516101809190610ddf565b60405180910390f35b34801561019557600080fd5b506101b060048036038101906101ab9190611071565b610a58565b6040516101c39796959493929190611369565b60405180910390f35b60008054905090565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e90611440565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161033d9291906114bf565b6020604051808303816000875af115801561035c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103809190611520565b6103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690611599565b60405180910390fd5b50565b81338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90611605565b60405180910390fd5b82600260008681526020019081526020016000206005018190555050505050565b600080600090505b82518110156106215760008382815181106104af576104ae611625565b5b6020026020010151905060011515600360008360000151815260200190815260200160002060009054906101000a900460ff16151514610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b906116a0565b60405180910390fd5b6000600260008360000151815260200190815260200160002090508160200151816005015461055391906116ef565b8461055e9190611731565b93508160200151816005015461057491906116ef565b600460008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105e69190611731565b9250508190555081602001518160060160008282546106059190611731565b925050819055505050808061061990611765565b915050610491565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610681939291906117bc565b6020604051808303816000875af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190611520565b610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa9061183f565b60405180910390fd5b5050565b80338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a490611605565b60405180910390fd5b60026000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006107f89190610d69565b6002820160006108089190610d69565b6003820160006108189190610d69565b6004820160006108289190610d69565b60058201600090556006820160009055505060006003600085815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600081116108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a5906118ab565b60405180910390fd5b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200185815260200184815260200183815260200182815250600260008054815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816109699190611acd565b50604082015181600201908161097f9190611acd565b5060608201518160030190816109959190611acd565b5060808201518160040190816109ab9190611acd565b5060a0820151816005015560c082015181600601559050506001600360008054815260200190815260200160002060006101000a81548160ff021916908315150217905550600080815480929190610a0290611765565b9190505550505050505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006060806060806000806002600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008a8152602001908152602001600020600101600260008b8152602001908152602001600020600201600260008c8152602001908152602001600020600301600260008d8152602001908152602001600020600401600260008e815260200190815260200160002060050154600260008f815260200190815260200160002060060154858054610b2c906118fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610b58906118fa565b8015610ba55780601f10610b7a57610100808354040283529160200191610ba5565b820191906000526020600020905b815481529060010190602001808311610b8857829003601f168201915b50505050509550848054610bb8906118fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610be4906118fa565b8015610c315780601f10610c0657610100808354040283529160200191610c31565b820191906000526020600020905b815481529060010190602001808311610c1457829003601f168201915b50505050509450838054610c44906118fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610c70906118fa565b8015610cbd5780601f10610c9257610100808354040283529160200191610cbd565b820191906000526020600020905b815481529060010190602001808311610ca057829003601f168201915b50505050509350828054610cd0906118fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfc906118fa565b8015610d495780601f10610d1e57610100808354040283529160200191610d49565b820191906000526020600020905b815481529060010190602001808311610d2c57829003601f168201915b505050505092509650965096509650965096509650919395979092949650565b508054610d75906118fa565b6000825580601f10610d875750610da6565b601f016020900490600052602060002090810190610da59190610da9565b5b50565b5b80821115610dc2576000816000905550600101610daa565b5090565b6000819050919050565b610dd981610dc6565b82525050565b6000602082019050610df46000830184610dd0565b92915050565b6000604051905090565b600080fd5b600080fd5b610e1781610dc6565b8114610e2257600080fd5b50565b600081359050610e3481610e0e565b92915050565b60008060408385031215610e5157610e50610e04565b5b6000610e5f85828601610e25565b9250506020610e7085828601610e25565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ec882610e7f565b810181811067ffffffffffffffff82111715610ee757610ee6610e90565b5b80604052505050565b6000610efa610dfa565b9050610f068282610ebf565b919050565b600067ffffffffffffffff821115610f2657610f25610e90565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060408284031215610f5757610f56610f3c565b5b610f616040610ef0565b90506000610f7184828501610e25565b6000830152506020610f8584828501610e25565b60208301525092915050565b6000610fa4610f9f84610f0b565b610ef0565b90508083825260208201905060408402830185811115610fc757610fc6610f37565b5b835b81811015610ff05780610fdc8882610f41565b845260208401935050604081019050610fc9565b5050509392505050565b600082601f83011261100f5761100e610e7a565b5b813561101f848260208601610f91565b91505092915050565b60006020828403121561103e5761103d610e04565b5b600082013567ffffffffffffffff81111561105c5761105b610e09565b5b61106884828501610ffa565b91505092915050565b60006020828403121561108757611086610e04565b5b600061109584828501610e25565b91505092915050565b600080fd5b600067ffffffffffffffff8211156110be576110bd610e90565b5b6110c782610e7f565b9050602081019050919050565b82818337600083830152505050565b60006110f66110f1846110a3565b610ef0565b9050828152602081018484840111156111125761111161109e565b5b61111d8482856110d4565b509392505050565b600082601f83011261113a57611139610e7a565b5b813561114a8482602086016110e3565b91505092915050565b600080600080600060a0868803121561116f5761116e610e04565b5b600086013567ffffffffffffffff81111561118d5761118c610e09565b5b61119988828901611125565b955050602086013567ffffffffffffffff8111156111ba576111b9610e09565b5b6111c688828901611125565b945050604086013567ffffffffffffffff8111156111e7576111e6610e09565b5b6111f388828901611125565b935050606086013567ffffffffffffffff81111561121457611213610e09565b5b61122088828901611125565b925050608061123188828901610e25565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112698261123e565b9050919050565b6112798161125e565b811461128457600080fd5b50565b60008135905061129681611270565b92915050565b6000602082840312156112b2576112b1610e04565b5b60006112c084828501611287565b91505092915050565b60006112d48261123e565b9050919050565b6112e4816112c9565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611324578082015181840152602081019050611309565b60008484015250505050565b600061133b826112ea565b61134581856112f5565b9350611355818560208601611306565b61135e81610e7f565b840191505092915050565b600060e08201905061137e600083018a6112db565b81810360208301526113908189611330565b905081810360408301526113a48188611330565b905081810360608301526113b88187611330565b905081810360808301526113cc8186611330565b90506113db60a0830185610dd0565b6113e860c0830184610dd0565b98975050505050505050565b7f456d7074792062616c616e636500000000000000000000000000000000000000600082015250565b600061142a600d836112f5565b9150611435826113f4565b602082019050919050565b600060208201905081810360008301526114598161141d565b9050919050565b6000819050919050565b600061148561148061147b8461123e565b611460565b61123e565b9050919050565b60006114978261146a565b9050919050565b60006114a98261148c565b9050919050565b6114b98161149e565b82525050565b60006040820190506114d460008301856114b0565b6114e16020830184610dd0565b9392505050565b60008115159050919050565b6114fd816114e8565b811461150857600080fd5b50565b60008151905061151a816114f4565b92915050565b60006020828403121561153657611535610e04565b5b60006115448482850161150b565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611583600f836112f5565b915061158e8261154d565b602082019050919050565b600060208201905081810360008301526115b281611576565b9050919050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006115ef6009836112f5565b91506115fa826115b9565b602082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f50726f6475637420646f6573206e6f7420657869737400000000000000000000600082015250565b600061168a6016836112f5565b915061169582611654565b602082019050919050565b600060208201905081810360008301526116b98161167d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116fa82610dc6565b915061170583610dc6565b925082820261171381610dc6565b9150828204841483151761172a576117296116c0565b5b5092915050565b600061173c82610dc6565b915061174783610dc6565b925082820190508082111561175f5761175e6116c0565b5b92915050565b600061177082610dc6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117a2576117a16116c0565b5b600182019050919050565b6117b68161125e565b82525050565b60006060820190506117d160008301866117ad565b6117de60208301856117ad565b6117eb6040830184610dd0565b949350505050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006118296010836112f5565b9150611834826117f3565b602082019050919050565b600060208201905081810360008301526118588161181c565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b6000611895601c836112f5565b91506118a08261185f565b602082019050919050565b600060208201905081810360008301526118c481611888565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061191257607f821691505b602082108103611925576119246118cb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261198d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611950565b6119978683611950565b95508019841693508086168417925050509392505050565b60006119ca6119c56119c084610dc6565b611460565b610dc6565b9050919050565b6000819050919050565b6119e4836119af565b6119f86119f0826119d1565b84845461195d565b825550505050565b600090565b611a0d611a00565b611a188184846119db565b505050565b5b81811015611a3c57611a31600082611a05565b600181019050611a1e565b5050565b601f821115611a8157611a528161192b565b611a5b84611940565b81016020851015611a6a578190505b611a7e611a7685611940565b830182611a1d565b50505b505050565b600082821c905092915050565b6000611aa460001984600802611a86565b1980831691505092915050565b6000611abd8383611a93565b9150826002028217905092915050565b611ad6826112ea565b67ffffffffffffffff811115611aef57611aee610e90565b5b611af982546118fa565b611b04828285611a40565b600060209050601f831160018114611b375760008415611b25578287015190505b611b2f8582611ab1565b865550611b97565b601f198416611b458661192b565b60005b82811015611b6d57848901518255600182019150602085019450602081019050611b48565b86831015611b8a5784890151611b86601f891682611a93565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220064390c3a970dbccd778a4d6576ed798af2b305fd4dbed09bebdf441586e141b64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80635ee95cae1161004e5780635ee95cae146100fa5780638da8f27b14610123578063f8b2cb4f1461014c578063fffa7e2e146101895761007b565b80631155dfe51461008057806324600fc3146100ab57806331f45cab146100b557806343e7fd45146100de575b600080fd5b34801561008c57600080fd5b506100956101cc565b6040516100a29190610ddf565b60405180910390f35b6100b36101d5565b005b3480156100c157600080fd5b506100dc60048036038101906100d79190610e3a565b6103c2565b005b6100f860048036038101906100f39190611028565b610489565b005b34801561010657600080fd5b50610121600480360381019061011c9190611071565b610707565b005b34801561012f57600080fd5b5061014a60048036038101906101459190611153565b61086b565b005b34801561015857600080fd5b50610173600480360381019061016e919061129c565b610a0f565b6040516101809190610ddf565b60405180910390f35b34801561019557600080fd5b506101b060048036038101906101ab9190611071565b610a58565b6040516101c39796959493929190611369565b60405180910390f35b60008054905090565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e90611440565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161033d9291906114bf565b6020604051808303816000875af115801561035c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103809190611520565b6103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690611599565b60405180910390fd5b50565b81338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90611605565b60405180910390fd5b82600260008681526020019081526020016000206005018190555050505050565b600080600090505b82518110156106215760008382815181106104af576104ae611625565b5b6020026020010151905060011515600360008360000151815260200190815260200160002060009054906101000a900460ff16151514610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b906116a0565b60405180910390fd5b6000600260008360000151815260200190815260200160002090508160200151816005015461055391906116ef565b8461055e9190611731565b93508160200151816005015461057491906116ef565b600460008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105e69190611731565b9250508190555081602001518160060160008282546106059190611731565b925050819055505050808061061990611765565b915050610491565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610681939291906117bc565b6020604051808303816000875af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190611520565b610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa9061183f565b60405180910390fd5b5050565b80338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a490611605565b60405180910390fd5b60026000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006107f89190610d69565b6002820160006108089190610d69565b6003820160006108189190610d69565b6004820160006108289190610d69565b60058201600090556006820160009055505060006003600085815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600081116108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a5906118ab565b60405180910390fd5b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200185815260200184815260200183815260200182815250600260008054815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816109699190611acd565b50604082015181600201908161097f9190611acd565b5060608201518160030190816109959190611acd565b5060808201518160040190816109ab9190611acd565b5060a0820151816005015560c082015181600601559050506001600360008054815260200190815260200160002060006101000a81548160ff021916908315150217905550600080815480929190610a0290611765565b9190505550505050505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006060806060806000806002600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008a8152602001908152602001600020600101600260008b8152602001908152602001600020600201600260008c8152602001908152602001600020600301600260008d8152602001908152602001600020600401600260008e815260200190815260200160002060050154600260008f815260200190815260200160002060060154858054610b2c906118fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610b58906118fa565b8015610ba55780601f10610b7a57610100808354040283529160200191610ba5565b820191906000526020600020905b815481529060010190602001808311610b8857829003601f168201915b50505050509550848054610bb8906118fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610be4906118fa565b8015610c315780601f10610c0657610100808354040283529160200191610c31565b820191906000526020600020905b815481529060010190602001808311610c1457829003601f168201915b50505050509450838054610c44906118fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610c70906118fa565b8015610cbd5780601f10610c9257610100808354040283529160200191610cbd565b820191906000526020600020905b815481529060010190602001808311610ca057829003601f168201915b50505050509350828054610cd0906118fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfc906118fa565b8015610d495780601f10610d1e57610100808354040283529160200191610d49565b820191906000526020600020905b815481529060010190602001808311610d2c57829003601f168201915b505050505092509650965096509650965096509650919395979092949650565b508054610d75906118fa565b6000825580601f10610d875750610da6565b601f016020900490600052602060002090810190610da59190610da9565b5b50565b5b80821115610dc2576000816000905550600101610daa565b5090565b6000819050919050565b610dd981610dc6565b82525050565b6000602082019050610df46000830184610dd0565b92915050565b6000604051905090565b600080fd5b600080fd5b610e1781610dc6565b8114610e2257600080fd5b50565b600081359050610e3481610e0e565b92915050565b60008060408385031215610e5157610e50610e04565b5b6000610e5f85828601610e25565b9250506020610e7085828601610e25565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ec882610e7f565b810181811067ffffffffffffffff82111715610ee757610ee6610e90565b5b80604052505050565b6000610efa610dfa565b9050610f068282610ebf565b919050565b600067ffffffffffffffff821115610f2657610f25610e90565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060408284031215610f5757610f56610f3c565b5b610f616040610ef0565b90506000610f7184828501610e25565b6000830152506020610f8584828501610e25565b60208301525092915050565b6000610fa4610f9f84610f0b565b610ef0565b90508083825260208201905060408402830185811115610fc757610fc6610f37565b5b835b81811015610ff05780610fdc8882610f41565b845260208401935050604081019050610fc9565b5050509392505050565b600082601f83011261100f5761100e610e7a565b5b813561101f848260208601610f91565b91505092915050565b60006020828403121561103e5761103d610e04565b5b600082013567ffffffffffffffff81111561105c5761105b610e09565b5b61106884828501610ffa565b91505092915050565b60006020828403121561108757611086610e04565b5b600061109584828501610e25565b91505092915050565b600080fd5b600067ffffffffffffffff8211156110be576110bd610e90565b5b6110c782610e7f565b9050602081019050919050565b82818337600083830152505050565b60006110f66110f1846110a3565b610ef0565b9050828152602081018484840111156111125761111161109e565b5b61111d8482856110d4565b509392505050565b600082601f83011261113a57611139610e7a565b5b813561114a8482602086016110e3565b91505092915050565b600080600080600060a0868803121561116f5761116e610e04565b5b600086013567ffffffffffffffff81111561118d5761118c610e09565b5b61119988828901611125565b955050602086013567ffffffffffffffff8111156111ba576111b9610e09565b5b6111c688828901611125565b945050604086013567ffffffffffffffff8111156111e7576111e6610e09565b5b6111f388828901611125565b935050606086013567ffffffffffffffff81111561121457611213610e09565b5b61122088828901611125565b925050608061123188828901610e25565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112698261123e565b9050919050565b6112798161125e565b811461128457600080fd5b50565b60008135905061129681611270565b92915050565b6000602082840312156112b2576112b1610e04565b5b60006112c084828501611287565b91505092915050565b60006112d48261123e565b9050919050565b6112e4816112c9565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611324578082015181840152602081019050611309565b60008484015250505050565b600061133b826112ea565b61134581856112f5565b9350611355818560208601611306565b61135e81610e7f565b840191505092915050565b600060e08201905061137e600083018a6112db565b81810360208301526113908189611330565b905081810360408301526113a48188611330565b905081810360608301526113b88187611330565b905081810360808301526113cc8186611330565b90506113db60a0830185610dd0565b6113e860c0830184610dd0565b98975050505050505050565b7f456d7074792062616c616e636500000000000000000000000000000000000000600082015250565b600061142a600d836112f5565b9150611435826113f4565b602082019050919050565b600060208201905081810360008301526114598161141d565b9050919050565b6000819050919050565b600061148561148061147b8461123e565b611460565b61123e565b9050919050565b60006114978261146a565b9050919050565b60006114a98261148c565b9050919050565b6114b98161149e565b82525050565b60006040820190506114d460008301856114b0565b6114e16020830184610dd0565b9392505050565b60008115159050919050565b6114fd816114e8565b811461150857600080fd5b50565b60008151905061151a816114f4565b92915050565b60006020828403121561153657611535610e04565b5b60006115448482850161150b565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611583600f836112f5565b915061158e8261154d565b602082019050919050565b600060208201905081810360008301526115b281611576565b9050919050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006115ef6009836112f5565b91506115fa826115b9565b602082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f50726f6475637420646f6573206e6f7420657869737400000000000000000000600082015250565b600061168a6016836112f5565b915061169582611654565b602082019050919050565b600060208201905081810360008301526116b98161167d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116fa82610dc6565b915061170583610dc6565b925082820261171381610dc6565b9150828204841483151761172a576117296116c0565b5b5092915050565b600061173c82610dc6565b915061174783610dc6565b925082820190508082111561175f5761175e6116c0565b5b92915050565b600061177082610dc6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117a2576117a16116c0565b5b600182019050919050565b6117b68161125e565b82525050565b60006060820190506117d160008301866117ad565b6117de60208301856117ad565b6117eb6040830184610dd0565b949350505050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006118296010836112f5565b9150611834826117f3565b602082019050919050565b600060208201905081810360008301526118588161181c565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b6000611895601c836112f5565b91506118a08261185f565b602082019050919050565b600060208201905081810360008301526118c481611888565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061191257607f821691505b602082108103611925576119246118cb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261198d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611950565b6119978683611950565b95508019841693508086168417925050509392505050565b60006119ca6119c56119c084610dc6565b611460565b610dc6565b9050919050565b6000819050919050565b6119e4836119af565b6119f86119f0826119d1565b84845461195d565b825550505050565b600090565b611a0d611a00565b611a188184846119db565b505050565b5b81811015611a3c57611a31600082611a05565b600181019050611a1e565b5050565b601f821115611a8157611a528161192b565b611a5b84611940565b81016020851015611a6a578190505b611a7e611a7685611940565b830182611a1d565b50505b505050565b600082821c905092915050565b6000611aa460001984600802611a86565b1980831691505092915050565b6000611abd8383611a93565b9150826002028217905092915050565b611ad6826112ea565b67ffffffffffffffff811115611aef57611aee610e90565b5b611af982546118fa565b611b04828285611a40565b600060209050601f831160018114611b375760008415611b25578287015190505b611b2f8582611ab1565b865550611b97565b601f198416611b458661192b565b60005b82811015611b6d57848901518255600182019150602085019450602081019050611b48565b86831015611b8a5784890151611b86601f891682611a93565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220064390c3a970dbccd778a4d6576ed798af2b305fd4dbed09bebdf441586e141b64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 71,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "productsLength",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 74,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "cEURTokenAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 99,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "products",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Product)89_storage)"
      },
      {
        "astId": 103,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "productExists",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 107,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "ownerBalance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Product)89_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.Product)",
        "numberOfBytes": "32",
        "value": "t_struct(Product)89_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Product)89_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Product",
        "members": [
          {
            "astId": 76,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 78,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 80,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "image",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 82,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 84,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "location",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 86,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 88,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "sold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}